#udp syslogs stream via 5140
input {
  udp {
    type => "syslog"
    port => 5140
    tags => ["pfsense"]
  }
}

#tcp syslog stream via 5140
input {
  tcp {
    type => "syslog"
    port => 5140
    tags => ["pfsense"]
  }
  
}



filter {
    grok {
      match => { "message" => "<%{NUMBER:priority}>%{SYSLOGTIMESTAMP:timestamp} filterlog\[%{NUMBER:pid}\]: %{NUMBER:rule_id},,,%{NUMBER:sub_rule_id},%{WORD:interface},%{WORD:action},%{WORD:action2},%{WORD:direction},%{NUMBER:ip_version},%{WORD:tos},,%{NUMBER:length},%{NUMBER:id},%{WORD:flags},%{WORD:flags},%{NUMBER:protocol},%{WORD:protocol_name},%{NUMBER:src_port},%{IP:src_ip},%{IP:dest_ip},%{NUMBER:dest_port},%{NUMBER:size},%{WORD:tcp_flags},%{GREEDYDATA:flow_data}" }
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
    }
    syslog_pri { }
    mutate {
      remove_field => [ "timestamp", "message" ]
    }
}


filter {
  grok {
    match => { "message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:program}\[%{INT:pid}\]: %{INT:interface_index},,,%{INT:rule_number},%{WORD:interface_name}.%{WORD:vlan},%{WORD:action},%{WORD:action2},%{WORD:direction},%{NUMBER:ip_version},%{BASE16NUM:tos},%{BASE16NUM:tos2},%{INT:ip_ttl},%{WORD:protocol},%{NUMBER:num_proto},%{INT:packet_length},%{IPV6:src_ip},%{IPV6:dst_ip},%{INT:src_port},%{INT:dst_port},%{INT:sequence_number}" }
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
    }
    syslog_pri { }
    mutate {
      remove_field => [ "timestamp", "message" ]
    }

}


filter {
  grok {
    match => { "message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:program}\[%{INT:pid}\]: %{INT:rule_number},,,%{INT:pass_count},%{WORD:interface_name}.%{WORD:vlan},%{WORD:match_result},%{WORD:block_result},%{WORD:direction},%{INT:ip_version},%{BASE16NUM:ip_tos},%{GREEDYDATA:ip_flags},%{INT:ip_ttl},%{WORD:protocol},%{INT:packet_length},%{IP:src_ip},%{IP:dst_ip},%{INT:src_port},%{INT:dst_port},%{INT:sequence_number},%{GREEDYDATA:tcp_flags}" }
  }
  date {
    match => [ "timestamp", "MMM dd HH:mm:ss" ]
  }
}


filter {
  grok {
    match => { "message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:program}\[%{INT:pid}\]: \[%{INT:sig_id}:%{INT:sig_rev}:%{INT:sig_sub}?\] %{GREEDYDATA:sig_msg} \[Classification: %{GREEDYDATA:classification}\] \[Priority: %{INT:priority_level}\] \{%{WORD:protocol}\} %{IP:src_ip}:%{INT:src_port} -> %{IP:dst_ip}:%{INT:dst_port}" }
  }
  date {
    match => [ "timestamp", "MMM dd HH:mm:ss" ]
  }
}


filter {
  grok {
    match => { "message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:program}\[%{INT:pid}\]: %{INT:rule_number},,,%{INT:block_count},%{WORD:interface_name}.%{WORD:vlan},%{WORD:match_result},%{WORD:block_result},%{WORD:direction},%{INT:ip_version},%{BASE16NUM:ip_tos},,%{GREEDYDATA:ip_flags},%{INT:ip_ttl},%{NUMBER:num},%{WORD:word},%{NUMBER:num2},%{WORD:protocol},%{INT:packet_length},%{IP:src_ip},%{IP:dst_ip},%{INT:src_port},%{INT:dst_port},%{INT:sequence_number}" }
  }
  date {
    match => [ "timestamp", "MMM dd HH:mm:ss" ]
  }
}


output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "CHANGE_ME_your_ELK_pw"
  }
}